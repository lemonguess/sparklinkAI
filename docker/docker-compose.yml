version: '3.8'

networks:
  sparklink:
    driver: bridge

services:
  # FastAPI 应用
  app:
    build: 
      context: ..
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - MYSQL_HOST=mysql
      - REDIS_HOST=redis
      - MILVUS_HOST=milvus
    depends_on:
      - mysql
      - redis
      - milvus
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - sparklink
    restart: unless-stopped

  # Celery Worker
  celery-worker:
    build: 
      context: ..
      dockerfile: Dockerfile
    command: python celery_worker.py
    environment:
      - MYSQL_HOST=mysql
      - REDIS_HOST=redis
      - MILVUS_HOST=milvus
    depends_on:
      - mysql
      - redis
      - milvus
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - sparklink
    restart: unless-stopped

  # MySQL 数据库
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: sparklinkai123
      MYSQL_DATABASE: sparklinkai
      MYSQL_USER: sparklinkai
      MYSQL_PASSWORD: sparklinkai123
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - sparklink
    restart: unless-stopped

  # Redis 缓存
  redis:
    image: redis:7.2-alpine
    volumes:
      - redis_data:/data
    networks:
      - sparklink
    restart: unless-stopped

  # Milvus 向量数据库 (Lite 版本，无需 etcd 和 minio)
  milvus:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.5.12
    command: ["milvus", "run", "standalone"]
    security_opt:
      - seccomp:unconfined
    environment:
      - ETCD_USE_EMBED=true
      - COMMON_STORAGETYPE=local
    volumes:
      - milvus_data:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    networks:
      - sparklink
    restart: unless-stopped

  # Attu - Milvus 管理界面
  attu:
    image: zilliz/attu:v2.4.9
    environment:
      - MILVUS_URL=milvus:19530
    depends_on:
      - milvus
    ports:
      - "3000:3000"
    networks:
      - sparklink
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:
  milvus_data: